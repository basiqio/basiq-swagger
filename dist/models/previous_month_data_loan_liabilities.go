// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PreviousMonthDataLoanLiabilities previous month data loan liabilities
//
// swagger:model PreviousMonthDataLoanLiabilities
type PreviousMonthDataLoanLiabilities struct {

	// total credits
	// Example: 0.00
	// Required: true
	TotalCredits *string `json:"totalCredits"`

	// total debits
	// Example: -8287.10
	// Required: true
	TotalDebits *string `json:"totalDebits"`

	// total interest charged
	// Example: -4303.50
	// Required: true
	TotalInterestCharged *string `json:"totalInterestCharged"`

	// total repayments
	// Example: 5768.00
	// Required: true
	TotalRepayments *string `json:"totalRepayments"`
}

// Validate validates this previous month data loan liabilities
func (m *PreviousMonthDataLoanLiabilities) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTotalCredits(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalDebits(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalInterestCharged(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalRepayments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PreviousMonthDataLoanLiabilities) validateTotalCredits(formats strfmt.Registry) error {

	if err := validate.Required("totalCredits", "body", m.TotalCredits); err != nil {
		return err
	}

	return nil
}

func (m *PreviousMonthDataLoanLiabilities) validateTotalDebits(formats strfmt.Registry) error {

	if err := validate.Required("totalDebits", "body", m.TotalDebits); err != nil {
		return err
	}

	return nil
}

func (m *PreviousMonthDataLoanLiabilities) validateTotalInterestCharged(formats strfmt.Registry) error {

	if err := validate.Required("totalInterestCharged", "body", m.TotalInterestCharged); err != nil {
		return err
	}

	return nil
}

func (m *PreviousMonthDataLoanLiabilities) validateTotalRepayments(formats strfmt.Registry) error {

	if err := validate.Required("totalRepayments", "body", m.TotalRepayments); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this previous month data loan liabilities based on context it is used
func (m *PreviousMonthDataLoanLiabilities) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PreviousMonthDataLoanLiabilities) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PreviousMonthDataLoanLiabilities) UnmarshalBinary(b []byte) error {
	var res PreviousMonthDataLoanLiabilities
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
