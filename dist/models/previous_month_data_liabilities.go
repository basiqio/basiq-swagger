// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PreviousMonthDataLiabilities previous month data liabilities
//
// swagger:model PreviousMonthDataLiabilities
type PreviousMonthDataLiabilities struct {

	// max balance
	// Example: -12329.16
	// Required: true
	MaxBalance *string `json:"maxBalance"`

	// min balance
	// Example: -3174.16
	// Required: true
	MinBalance *string `json:"minBalance"`

	// total credits
	// Example: 0.00
	// Required: true
	TotalCredits *string `json:"totalCredits"`

	// total debits
	// Example: -8287.10
	// Required: true
	TotalDebits *string `json:"totalDebits"`
}

// Validate validates this previous month data liabilities
func (m *PreviousMonthDataLiabilities) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaxBalance(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMinBalance(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCredits(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalDebits(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PreviousMonthDataLiabilities) validateMaxBalance(formats strfmt.Registry) error {

	if err := validate.Required("maxBalance", "body", m.MaxBalance); err != nil {
		return err
	}

	return nil
}

func (m *PreviousMonthDataLiabilities) validateMinBalance(formats strfmt.Registry) error {

	if err := validate.Required("minBalance", "body", m.MinBalance); err != nil {
		return err
	}

	return nil
}

func (m *PreviousMonthDataLiabilities) validateTotalCredits(formats strfmt.Registry) error {

	if err := validate.Required("totalCredits", "body", m.TotalCredits); err != nil {
		return err
	}

	return nil
}

func (m *PreviousMonthDataLiabilities) validateTotalDebits(formats strfmt.Registry) error {

	if err := validate.Required("totalDebits", "body", m.TotalDebits); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PreviousMonthDataLiabilities) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PreviousMonthDataLiabilities) UnmarshalBinary(b []byte) error {
	var res PreviousMonthDataLiabilities
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
