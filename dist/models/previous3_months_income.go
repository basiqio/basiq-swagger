// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Previous3MonthsIncome previous3 months income
//
// swagger:model Previous3MonthsIncome
type Previous3MonthsIncome struct {

	// Median regular income amount - calculated across all occurrences in last 3 months (note: median provides a more reliable amount than mean for a regular income source as it is less affected by outliers and skewed data - use variance amount to understand outliers and changeHistory to view actual credits)
	// Example: 18098.00
	// Required: true
	AmountAvg *string `json:"amountAvg"`

	// Median monthly regular income amount
	// Example: 18098.00
	// Required: true
	AmountAvgMonthly *string `json:"amountAvgMonthly"`

	// Difference between min and max payment amount for regular income
	// Example: 0.00
	// Required: true
	Variance *string `json:"variance"`
}

// Validate validates this previous3 months income
func (m *Previous3MonthsIncome) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAmountAvg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAmountAvgMonthly(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVariance(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Previous3MonthsIncome) validateAmountAvg(formats strfmt.Registry) error {

	if err := validate.Required("amountAvg", "body", m.AmountAvg); err != nil {
		return err
	}

	return nil
}

func (m *Previous3MonthsIncome) validateAmountAvgMonthly(formats strfmt.Registry) error {

	if err := validate.Required("amountAvgMonthly", "body", m.AmountAvgMonthly); err != nil {
		return err
	}

	return nil
}

func (m *Previous3MonthsIncome) validateVariance(formats strfmt.Registry) error {

	if err := validate.Required("variance", "body", m.Variance); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this previous3 months income based on context it is used
func (m *Previous3MonthsIncome) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Previous3MonthsIncome) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Previous3MonthsIncome) UnmarshalBinary(b []byte) error {
	var res Previous3MonthsIncome
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
