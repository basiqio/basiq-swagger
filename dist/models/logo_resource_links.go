// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LogoResourceLinks LogoResourceLinks contains institution logo resource links
//
// swagger:model LogoResourceLinks
type LogoResourceLinks struct {

	// URL to full size logo
	// Example: https://example.com/AU00000-full.svg
	// Required: true
	Full *string `json:"full"`

	// Square formatted logo URL
	// Example: https://example.com/AU00000.svg
	// Required: true
	Square *string `json:"square"`
}

// Validate validates this logo resource links
func (m *LogoResourceLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFull(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSquare(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LogoResourceLinks) validateFull(formats strfmt.Registry) error {

	if err := validate.Required("full", "body", m.Full); err != nil {
		return err
	}

	return nil
}

func (m *LogoResourceLinks) validateSquare(formats strfmt.Registry) error {

	if err := validate.Required("square", "body", m.Square); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this logo resource links based on context it is used
func (m *LogoResourceLinks) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LogoResourceLinks) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LogoResourceLinks) UnmarshalBinary(b []byte) error {
	var res LogoResourceLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
