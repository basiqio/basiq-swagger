// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClassResourceExpenses Average monthly amount for given class for defined period
//
// swagger:model ClassResourceExpenses
type ClassResourceExpenses struct {

	// Average amount monthly
	// Example: -421.00
	// Required: true
	AvgMonthly *string `json:"avgMonthly"`

	// change history
	// Required: true
	ChangeHistory []*ChangeHistoryExpensesClass `json:"changeHistory"`

	// Summary period "monthly"
	// Example: monthly
	// Required: true
	Summary *string `json:"summary"`
}

// Validate validates this class resource expenses
func (m *ClassResourceExpenses) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvgMonthly(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChangeHistory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSummary(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClassResourceExpenses) validateAvgMonthly(formats strfmt.Registry) error {

	if err := validate.Required("avgMonthly", "body", m.AvgMonthly); err != nil {
		return err
	}

	return nil
}

func (m *ClassResourceExpenses) validateChangeHistory(formats strfmt.Registry) error {

	if err := validate.Required("changeHistory", "body", m.ChangeHistory); err != nil {
		return err
	}

	for i := 0; i < len(m.ChangeHistory); i++ {
		if swag.IsZero(m.ChangeHistory[i]) { // not required
			continue
		}

		if m.ChangeHistory[i] != nil {
			if err := m.ChangeHistory[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("changeHistory" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ClassResourceExpenses) validateSummary(formats strfmt.Registry) error {

	if err := validate.Required("summary", "body", m.Summary); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this class resource expenses based on the context it is used
func (m *ClassResourceExpenses) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateChangeHistory(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClassResourceExpenses) contextValidateChangeHistory(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.ChangeHistory); i++ {

		if m.ChangeHistory[i] != nil {
			if err := m.ChangeHistory[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("changeHistory" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClassResourceExpenses) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClassResourceExpenses) UnmarshalBinary(b []byte) error {
	var res ClassResourceExpenses
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
