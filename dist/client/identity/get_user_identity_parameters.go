// Code generated by go-swagger; DO NOT EDIT.

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUserIdentityParams creates a new GetUserIdentityParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUserIdentityParams() *GetUserIdentityParams {
	return &GetUserIdentityParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUserIdentityParamsWithTimeout creates a new GetUserIdentityParams object
// with the ability to set a timeout on a request.
func NewGetUserIdentityParamsWithTimeout(timeout time.Duration) *GetUserIdentityParams {
	return &GetUserIdentityParams{
		timeout: timeout,
	}
}

// NewGetUserIdentityParamsWithContext creates a new GetUserIdentityParams object
// with the ability to set a context for a request.
func NewGetUserIdentityParamsWithContext(ctx context.Context) *GetUserIdentityParams {
	return &GetUserIdentityParams{
		Context: ctx,
	}
}

// NewGetUserIdentityParamsWithHTTPClient creates a new GetUserIdentityParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUserIdentityParamsWithHTTPClient(client *http.Client) *GetUserIdentityParams {
	return &GetUserIdentityParams{
		HTTPClient: client,
	}
}

/*
GetUserIdentityParams contains all the parameters to send to the API endpoint

	for the get user identity operation.

	Typically these are written to a http.Request.
*/
type GetUserIdentityParams struct {

	/* IdentityID.

	   Identity identifier.
	*/
	IdentityID string

	/* UserID.

	   User identifier.
	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get user identity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserIdentityParams) WithDefaults() *GetUserIdentityParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get user identity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserIdentityParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get user identity params
func (o *GetUserIdentityParams) WithTimeout(timeout time.Duration) *GetUserIdentityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get user identity params
func (o *GetUserIdentityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get user identity params
func (o *GetUserIdentityParams) WithContext(ctx context.Context) *GetUserIdentityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get user identity params
func (o *GetUserIdentityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get user identity params
func (o *GetUserIdentityParams) WithHTTPClient(client *http.Client) *GetUserIdentityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get user identity params
func (o *GetUserIdentityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIdentityID adds the identityID to the get user identity params
func (o *GetUserIdentityParams) WithIdentityID(identityID string) *GetUserIdentityParams {
	o.SetIdentityID(identityID)
	return o
}

// SetIdentityID adds the identityId to the get user identity params
func (o *GetUserIdentityParams) SetIdentityID(identityID string) {
	o.IdentityID = identityID
}

// WithUserID adds the userID to the get user identity params
func (o *GetUserIdentityParams) WithUserID(userID string) *GetUserIdentityParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get user identity params
func (o *GetUserIdentityParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *GetUserIdentityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param identityId
	if err := r.SetPathParam("identityId", o.IdentityID); err != nil {
		return err
	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
