// Code generated by go-swagger; DO NOT EDIT.

package enrich

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetEnrichParams creates a new GetEnrichParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetEnrichParams() *GetEnrichParams {
	return &GetEnrichParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetEnrichParamsWithTimeout creates a new GetEnrichParams object
// with the ability to set a timeout on a request.
func NewGetEnrichParamsWithTimeout(timeout time.Duration) *GetEnrichParams {
	return &GetEnrichParams{
		timeout: timeout,
	}
}

// NewGetEnrichParamsWithContext creates a new GetEnrichParams object
// with the ability to set a context for a request.
func NewGetEnrichParamsWithContext(ctx context.Context) *GetEnrichParams {
	return &GetEnrichParams{
		Context: ctx,
	}
}

// NewGetEnrichParamsWithHTTPClient creates a new GetEnrichParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetEnrichParamsWithHTTPClient(client *http.Client) *GetEnrichParams {
	return &GetEnrichParams{
		HTTPClient: client,
	}
}

/* GetEnrichParams contains all the parameters to send to the API endpoint
   for the get enrich operation.

   Typically these are written to a http.Request.
*/
type GetEnrichParams struct {

	/* AccountType.

	   Account Type
	*/
	AccountType *string

	/* Amount.

	   Amount

	   Format: double
	*/
	Amount *float64

	/* Institution.

	   Institution ID
	*/
	Institution string

	/* Q.

	   Transaction Description
	*/
	Q string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get enrich params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEnrichParams) WithDefaults() *GetEnrichParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get enrich params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEnrichParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get enrich params
func (o *GetEnrichParams) WithTimeout(timeout time.Duration) *GetEnrichParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get enrich params
func (o *GetEnrichParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get enrich params
func (o *GetEnrichParams) WithContext(ctx context.Context) *GetEnrichParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get enrich params
func (o *GetEnrichParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get enrich params
func (o *GetEnrichParams) WithHTTPClient(client *http.Client) *GetEnrichParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get enrich params
func (o *GetEnrichParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountType adds the accountType to the get enrich params
func (o *GetEnrichParams) WithAccountType(accountType *string) *GetEnrichParams {
	o.SetAccountType(accountType)
	return o
}

// SetAccountType adds the accountType to the get enrich params
func (o *GetEnrichParams) SetAccountType(accountType *string) {
	o.AccountType = accountType
}

// WithAmount adds the amount to the get enrich params
func (o *GetEnrichParams) WithAmount(amount *float64) *GetEnrichParams {
	o.SetAmount(amount)
	return o
}

// SetAmount adds the amount to the get enrich params
func (o *GetEnrichParams) SetAmount(amount *float64) {
	o.Amount = amount
}

// WithInstitution adds the institution to the get enrich params
func (o *GetEnrichParams) WithInstitution(institution string) *GetEnrichParams {
	o.SetInstitution(institution)
	return o
}

// SetInstitution adds the institution to the get enrich params
func (o *GetEnrichParams) SetInstitution(institution string) {
	o.Institution = institution
}

// WithQ adds the q to the get enrich params
func (o *GetEnrichParams) WithQ(q string) *GetEnrichParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the get enrich params
func (o *GetEnrichParams) SetQ(q string) {
	o.Q = q
}

// WriteToRequest writes these params to a swagger request
func (o *GetEnrichParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountType != nil {

		// query param accountType
		var qrAccountType string

		if o.AccountType != nil {
			qrAccountType = *o.AccountType
		}
		qAccountType := qrAccountType
		if qAccountType != "" {

			if err := r.SetQueryParam("accountType", qAccountType); err != nil {
				return err
			}
		}
	}

	if o.Amount != nil {

		// query param amount
		var qrAmount float64

		if o.Amount != nil {
			qrAmount = *o.Amount
		}
		qAmount := swag.FormatFloat64(qrAmount)
		if qAmount != "" {

			if err := r.SetQueryParam("amount", qAmount); err != nil {
				return err
			}
		}
	}

	// query param institution
	qrInstitution := o.Institution
	qInstitution := qrInstitution
	if qInstitution != "" {

		if err := r.SetQueryParam("institution", qInstitution); err != nil {
			return err
		}
	}

	// query param q
	qrQ := o.Q
	qQ := qrQ
	if qQ != "" {

		if err := r.SetQueryParam("q", qQ); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
