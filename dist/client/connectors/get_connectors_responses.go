// Code generated by go-swagger; DO NOT EDIT.

package connectors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// GetConnectorsReader is a Reader for the GetConnectors structure.
type GetConnectorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConnectorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConnectorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConnectorsOK creates a GetConnectorsOK with default headers values
func NewGetConnectorsOK() *GetConnectorsOK {
	return &GetConnectorsOK{}
}

/*
GetConnectorsOK describes a response with status code 200, with default header values.

Returns data of single connector.
*/
type GetConnectorsOK struct {
	Payload *models.ConnectorsList
}

// IsSuccess returns true when this get connectors o k response has a 2xx status code
func (o *GetConnectorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get connectors o k response has a 3xx status code
func (o *GetConnectorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connectors o k response has a 4xx status code
func (o *GetConnectorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connectors o k response has a 5xx status code
func (o *GetConnectorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get connectors o k response a status code equal to that given
func (o *GetConnectorsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConnectorsOK) Error() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsOK  %+v", 200, o.Payload)
}

func (o *GetConnectorsOK) String() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsOK  %+v", 200, o.Payload)
}

func (o *GetConnectorsOK) GetPayload() *models.ConnectorsList {
	return o.Payload
}

func (o *GetConnectorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectorsList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorsBadRequest creates a GetConnectorsBadRequest with default headers values
func NewGetConnectorsBadRequest() *GetConnectorsBadRequest {
	return &GetConnectorsBadRequest{}
}

/*
GetConnectorsBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error.
*/
type GetConnectorsBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this get connectors bad request response has a 2xx status code
func (o *GetConnectorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connectors bad request response has a 3xx status code
func (o *GetConnectorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connectors bad request response has a 4xx status code
func (o *GetConnectorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connectors bad request response has a 5xx status code
func (o *GetConnectorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get connectors bad request response a status code equal to that given
func (o *GetConnectorsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConnectorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConnectorsBadRequest) String() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsBadRequest  %+v", 400, o.Payload)
}

func (o *GetConnectorsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetConnectorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorsUnauthorized creates a GetConnectorsUnauthorized with default headers values
func NewGetConnectorsUnauthorized() *GetConnectorsUnauthorized {
	return &GetConnectorsUnauthorized{}
}

/*
GetConnectorsUnauthorized describes a response with status code 401, with default header values.

Returns error that indicates unauthorized access.
*/
type GetConnectorsUnauthorized struct {
	Payload *models.UnauthorizedError
}

// IsSuccess returns true when this get connectors unauthorized response has a 2xx status code
func (o *GetConnectorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connectors unauthorized response has a 3xx status code
func (o *GetConnectorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connectors unauthorized response has a 4xx status code
func (o *GetConnectorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connectors unauthorized response has a 5xx status code
func (o *GetConnectorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get connectors unauthorized response a status code equal to that given
func (o *GetConnectorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConnectorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConnectorsUnauthorized) String() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConnectorsUnauthorized) GetPayload() *models.UnauthorizedError {
	return o.Payload
}

func (o *GetConnectorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorsInternalServerError creates a GetConnectorsInternalServerError with default headers values
func NewGetConnectorsInternalServerError() *GetConnectorsInternalServerError {
	return &GetConnectorsInternalServerError{}
}

/*
GetConnectorsInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type GetConnectorsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get connectors internal server error response has a 2xx status code
func (o *GetConnectorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connectors internal server error response has a 3xx status code
func (o *GetConnectorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connectors internal server error response has a 4xx status code
func (o *GetConnectorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connectors internal server error response has a 5xx status code
func (o *GetConnectorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get connectors internal server error response a status code equal to that given
func (o *GetConnectorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConnectorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConnectorsInternalServerError) String() string {
	return fmt.Sprintf("[GET /connectors][%d] getConnectorsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConnectorsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetConnectorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
