// Code generated by go-swagger; DO NOT EDIT.

package connectors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// GetConnectorReader is a Reader for the GetConnector structure.
type GetConnectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConnectorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConnectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetConnectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConnectorOK creates a GetConnectorOK with default headers values
func NewGetConnectorOK() *GetConnectorOK {
	return &GetConnectorOK{}
}

/*
GetConnectorOK describes a response with status code 200, with default header values.

Returns data of single connector.
*/
type GetConnectorOK struct {
	Payload *models.Connector
}

// IsSuccess returns true when this get connector o k response has a 2xx status code
func (o *GetConnectorOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get connector o k response has a 3xx status code
func (o *GetConnectorOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connector o k response has a 4xx status code
func (o *GetConnectorOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connector o k response has a 5xx status code
func (o *GetConnectorOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get connector o k response a status code equal to that given
func (o *GetConnectorOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetConnectorOK) Error() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorOK  %+v", 200, o.Payload)
}

func (o *GetConnectorOK) String() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorOK  %+v", 200, o.Payload)
}

func (o *GetConnectorOK) GetPayload() *models.Connector {
	return o.Payload
}

func (o *GetConnectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Connector)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorBadRequest creates a GetConnectorBadRequest with default headers values
func NewGetConnectorBadRequest() *GetConnectorBadRequest {
	return &GetConnectorBadRequest{}
}

/*
GetConnectorBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error.
*/
type GetConnectorBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this get connector bad request response has a 2xx status code
func (o *GetConnectorBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connector bad request response has a 3xx status code
func (o *GetConnectorBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connector bad request response has a 4xx status code
func (o *GetConnectorBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connector bad request response has a 5xx status code
func (o *GetConnectorBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get connector bad request response a status code equal to that given
func (o *GetConnectorBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetConnectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorBadRequest  %+v", 400, o.Payload)
}

func (o *GetConnectorBadRequest) String() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorBadRequest  %+v", 400, o.Payload)
}

func (o *GetConnectorBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetConnectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorUnauthorized creates a GetConnectorUnauthorized with default headers values
func NewGetConnectorUnauthorized() *GetConnectorUnauthorized {
	return &GetConnectorUnauthorized{}
}

/*
GetConnectorUnauthorized describes a response with status code 401, with default header values.

Returns error that indicates unauthorized access.
*/
type GetConnectorUnauthorized struct {
	Payload *models.UnauthorizedError
}

// IsSuccess returns true when this get connector unauthorized response has a 2xx status code
func (o *GetConnectorUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connector unauthorized response has a 3xx status code
func (o *GetConnectorUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connector unauthorized response has a 4xx status code
func (o *GetConnectorUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connector unauthorized response has a 5xx status code
func (o *GetConnectorUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get connector unauthorized response a status code equal to that given
func (o *GetConnectorUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetConnectorUnauthorized) Error() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConnectorUnauthorized) String() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorUnauthorized  %+v", 401, o.Payload)
}

func (o *GetConnectorUnauthorized) GetPayload() *models.UnauthorizedError {
	return o.Payload
}

func (o *GetConnectorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorNotFound creates a GetConnectorNotFound with default headers values
func NewGetConnectorNotFound() *GetConnectorNotFound {
	return &GetConnectorNotFound{}
}

/*
GetConnectorNotFound describes a response with status code 404, with default header values.

Returns error indicating that server cannot find requested resource.
*/
type GetConnectorNotFound struct {
	Payload *models.NotFoundError
}

// IsSuccess returns true when this get connector not found response has a 2xx status code
func (o *GetConnectorNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connector not found response has a 3xx status code
func (o *GetConnectorNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connector not found response has a 4xx status code
func (o *GetConnectorNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get connector not found response has a 5xx status code
func (o *GetConnectorNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get connector not found response a status code equal to that given
func (o *GetConnectorNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetConnectorNotFound) Error() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorNotFound  %+v", 404, o.Payload)
}

func (o *GetConnectorNotFound) String() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorNotFound  %+v", 404, o.Payload)
}

func (o *GetConnectorNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetConnectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorInternalServerError creates a GetConnectorInternalServerError with default headers values
func NewGetConnectorInternalServerError() *GetConnectorInternalServerError {
	return &GetConnectorInternalServerError{}
}

/*
GetConnectorInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type GetConnectorInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get connector internal server error response has a 2xx status code
func (o *GetConnectorInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get connector internal server error response has a 3xx status code
func (o *GetConnectorInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get connector internal server error response has a 4xx status code
func (o *GetConnectorInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get connector internal server error response has a 5xx status code
func (o *GetConnectorInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get connector internal server error response a status code equal to that given
func (o *GetConnectorInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetConnectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConnectorInternalServerError) String() string {
	return fmt.Sprintf("[GET /connectors/{connectorId}/{method}][%d] getConnectorInternalServerError  %+v", 500, o.Payload)
}

func (o *GetConnectorInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetConnectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
