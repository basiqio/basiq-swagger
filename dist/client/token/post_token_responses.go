// Code generated by go-swagger; DO NOT EDIT.

package token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// PostTokenReader is a Reader for the PostToken structure.
type PostTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostTokenOK creates a PostTokenOK with default headers values
func NewPostTokenOK() *PostTokenOK {
	return &PostTokenOK{}
}

/*
PostTokenOK describes a response with status code 200, with default header values.

Return token object that will be used for Basiq API requests.
*/
type PostTokenOK struct {
	Payload *models.TokenPostResponse
}

// IsSuccess returns true when this post token o k response has a 2xx status code
func (o *PostTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post token o k response has a 3xx status code
func (o *PostTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post token o k response has a 4xx status code
func (o *PostTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post token o k response has a 5xx status code
func (o *PostTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post token o k response a status code equal to that given
func (o *PostTokenOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostTokenOK) Error() string {
	return fmt.Sprintf("[POST /token][%d] postTokenOK  %+v", 200, o.Payload)
}

func (o *PostTokenOK) String() string {
	return fmt.Sprintf("[POST /token][%d] postTokenOK  %+v", 200, o.Payload)
}

func (o *PostTokenOK) GetPayload() *models.TokenPostResponse {
	return o.Payload
}

func (o *PostTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TokenPostResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTokenBadRequest creates a PostTokenBadRequest with default headers values
func NewPostTokenBadRequest() *PostTokenBadRequest {
	return &PostTokenBadRequest{}
}

/*
PostTokenBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error.
*/
type PostTokenBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this post token bad request response has a 2xx status code
func (o *PostTokenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post token bad request response has a 3xx status code
func (o *PostTokenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post token bad request response has a 4xx status code
func (o *PostTokenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post token bad request response has a 5xx status code
func (o *PostTokenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post token bad request response a status code equal to that given
func (o *PostTokenBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /token][%d] postTokenBadRequest  %+v", 400, o.Payload)
}

func (o *PostTokenBadRequest) String() string {
	return fmt.Sprintf("[POST /token][%d] postTokenBadRequest  %+v", 400, o.Payload)
}

func (o *PostTokenBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *PostTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTokenNotFound creates a PostTokenNotFound with default headers values
func NewPostTokenNotFound() *PostTokenNotFound {
	return &PostTokenNotFound{}
}

/*
PostTokenNotFound describes a response with status code 404, with default header values.

Returns error indicating that server can't find requested resource.
*/
type PostTokenNotFound struct {
	Payload *models.NotFoundError
}

// IsSuccess returns true when this post token not found response has a 2xx status code
func (o *PostTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post token not found response has a 3xx status code
func (o *PostTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post token not found response has a 4xx status code
func (o *PostTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post token not found response has a 5xx status code
func (o *PostTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post token not found response a status code equal to that given
func (o *PostTokenNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostTokenNotFound) Error() string {
	return fmt.Sprintf("[POST /token][%d] postTokenNotFound  %+v", 404, o.Payload)
}

func (o *PostTokenNotFound) String() string {
	return fmt.Sprintf("[POST /token][%d] postTokenNotFound  %+v", 404, o.Payload)
}

func (o *PostTokenNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *PostTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTokenInternalServerError creates a PostTokenInternalServerError with default headers values
func NewPostTokenInternalServerError() *PostTokenInternalServerError {
	return &PostTokenInternalServerError{}
}

/*
PostTokenInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type PostTokenInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this post token internal server error response has a 2xx status code
func (o *PostTokenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post token internal server error response has a 3xx status code
func (o *PostTokenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post token internal server error response has a 4xx status code
func (o *PostTokenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post token internal server error response has a 5xx status code
func (o *PostTokenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post token internal server error response a status code equal to that given
func (o *PostTokenInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /token][%d] postTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTokenInternalServerError) String() string {
	return fmt.Sprintf("[POST /token][%d] postTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTokenInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PostTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
