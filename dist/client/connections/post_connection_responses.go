// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// PostConnectionReader is a Reader for the PostConnection structure.
type PostConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostConnectionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConnectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostConnectionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConnectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostConnectionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConnectionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConnectionAccepted creates a PostConnectionAccepted with default headers values
func NewPostConnectionAccepted() *PostConnectionAccepted {
	return &PostConnectionAccepted{}
}

/* PostConnectionAccepted describes a response with status code 202, with default header values.

Returns the job object if the creation succeeded.
*/
type PostConnectionAccepted struct {
	Payload *models.ConnectionResponseResource
}

func (o *PostConnectionAccepted) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionAccepted  %+v", 202, o.Payload)
}
func (o *PostConnectionAccepted) GetPayload() *models.ConnectionResponseResource {
	return o.Payload
}

func (o *PostConnectionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectionResponseResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConnectionBadRequest creates a PostConnectionBadRequest with default headers values
func NewPostConnectionBadRequest() *PostConnectionBadRequest {
	return &PostConnectionBadRequest{}
}

/* PostConnectionBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error
*/
type PostConnectionBadRequest struct {
	Payload *models.BadRequestError
}

func (o *PostConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *PostConnectionBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *PostConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConnectionUnauthorized creates a PostConnectionUnauthorized with default headers values
func NewPostConnectionUnauthorized() *PostConnectionUnauthorized {
	return &PostConnectionUnauthorized{}
}

/* PostConnectionUnauthorized describes a response with status code 401, with default header values.

Error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource.
*/
type PostConnectionUnauthorized struct {
	Payload *models.UnauthorizedError
}

func (o *PostConnectionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionUnauthorized  %+v", 401, o.Payload)
}
func (o *PostConnectionUnauthorized) GetPayload() *models.UnauthorizedError {
	return o.Payload
}

func (o *PostConnectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConnectionForbidden creates a PostConnectionForbidden with default headers values
func NewPostConnectionForbidden() *PostConnectionForbidden {
	return &PostConnectionForbidden{}
}

/* PostConnectionForbidden describes a response with status code 403, with default header values.

Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource.
*/
type PostConnectionForbidden struct {
	Payload *models.ForbiddenAccessError
}

func (o *PostConnectionForbidden) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionForbidden  %+v", 403, o.Payload)
}
func (o *PostConnectionForbidden) GetPayload() *models.ForbiddenAccessError {
	return o.Payload
}

func (o *PostConnectionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenAccessError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConnectionNotFound creates a PostConnectionNotFound with default headers values
func NewPostConnectionNotFound() *PostConnectionNotFound {
	return &PostConnectionNotFound{}
}

/* PostConnectionNotFound describes a response with status code 404, with default header values.

Returns error indicating that server can't find requested resource.
*/
type PostConnectionNotFound struct {
	Payload *models.NotFoundError
}

func (o *PostConnectionNotFound) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionNotFound  %+v", 404, o.Payload)
}
func (o *PostConnectionNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *PostConnectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConnectionUnsupportedMediaType creates a PostConnectionUnsupportedMediaType with default headers values
func NewPostConnectionUnsupportedMediaType() *PostConnectionUnsupportedMediaType {
	return &PostConnectionUnsupportedMediaType{}
}

/* PostConnectionUnsupportedMediaType describes a response with status code 415, with default header values.

Returns error response code that indicates that the server refuses to accept the request because the payload format is in an unsupported format.
*/
type PostConnectionUnsupportedMediaType struct {
	Payload *models.UnsupportedMediaTypeError
}

func (o *PostConnectionUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *PostConnectionUnsupportedMediaType) GetPayload() *models.UnsupportedMediaTypeError {
	return o.Payload
}

func (o *PostConnectionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnsupportedMediaTypeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConnectionInternalServerError creates a PostConnectionInternalServerError with default headers values
func NewPostConnectionInternalServerError() *PostConnectionInternalServerError {
	return &PostConnectionInternalServerError{}
}

/* PostConnectionInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type PostConnectionInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *PostConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionInternalServerError  %+v", 500, o.Payload)
}
func (o *PostConnectionInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PostConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConnectionServiceUnavailable creates a PostConnectionServiceUnavailable with default headers values
func NewPostConnectionServiceUnavailable() *PostConnectionServiceUnavailable {
	return &PostConnectionServiceUnavailable{}
}

/* PostConnectionServiceUnavailable describes a response with status code 503, with default header values.

Returns error response code indicates that the server is not ready to handle the request.
*/
type PostConnectionServiceUnavailable struct {
	Payload *models.StatusServiceUnavailableError
}

func (o *PostConnectionServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/connections][%d] postConnectionServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostConnectionServiceUnavailable) GetPayload() *models.StatusServiceUnavailableError {
	return o.Payload
}

func (o *PostConnectionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StatusServiceUnavailableError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
