// Code generated by go-swagger; DO NOT EDIT.

package auth_links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// PostAuthLinkReader is a Reader for the PostAuthLink structure.
type PostAuthLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostAuthLinkCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAuthLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostAuthLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthLinkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthLinkCreated creates a PostAuthLinkCreated with default headers values
func NewPostAuthLinkCreated() *PostAuthLinkCreated {
	return &PostAuthLinkCreated{}
}

/*
PostAuthLinkCreated describes a response with status code 201, with default header values.

Returns a created auth_link resource, if the operation succeeded
*/
type PostAuthLinkCreated struct {
	Payload *models.AuthLinksPostResponseResource
}

// IsSuccess returns true when this post auth link created response has a 2xx status code
func (o *PostAuthLinkCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post auth link created response has a 3xx status code
func (o *PostAuthLinkCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth link created response has a 4xx status code
func (o *PostAuthLinkCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post auth link created response has a 5xx status code
func (o *PostAuthLinkCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post auth link created response a status code equal to that given
func (o *PostAuthLinkCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostAuthLinkCreated) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkCreated  %+v", 201, o.Payload)
}

func (o *PostAuthLinkCreated) String() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkCreated  %+v", 201, o.Payload)
}

func (o *PostAuthLinkCreated) GetPayload() *models.AuthLinksPostResponseResource {
	return o.Payload
}

func (o *PostAuthLinkCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthLinksPostResponseResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthLinkBadRequest creates a PostAuthLinkBadRequest with default headers values
func NewPostAuthLinkBadRequest() *PostAuthLinkBadRequest {
	return &PostAuthLinkBadRequest{}
}

/*
PostAuthLinkBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error
*/
type PostAuthLinkBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this post auth link bad request response has a 2xx status code
func (o *PostAuthLinkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post auth link bad request response has a 3xx status code
func (o *PostAuthLinkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth link bad request response has a 4xx status code
func (o *PostAuthLinkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post auth link bad request response has a 5xx status code
func (o *PostAuthLinkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post auth link bad request response a status code equal to that given
func (o *PostAuthLinkBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostAuthLinkBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthLinkBadRequest) String() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthLinkBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *PostAuthLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthLinkForbidden creates a PostAuthLinkForbidden with default headers values
func NewPostAuthLinkForbidden() *PostAuthLinkForbidden {
	return &PostAuthLinkForbidden{}
}

/*
PostAuthLinkForbidden describes a response with status code 403, with default header values.

Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource.
*/
type PostAuthLinkForbidden struct {
	Payload *models.ForbiddenAccessError
}

// IsSuccess returns true when this post auth link forbidden response has a 2xx status code
func (o *PostAuthLinkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post auth link forbidden response has a 3xx status code
func (o *PostAuthLinkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth link forbidden response has a 4xx status code
func (o *PostAuthLinkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post auth link forbidden response has a 5xx status code
func (o *PostAuthLinkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post auth link forbidden response a status code equal to that given
func (o *PostAuthLinkForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostAuthLinkForbidden) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthLinkForbidden) String() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkForbidden  %+v", 403, o.Payload)
}

func (o *PostAuthLinkForbidden) GetPayload() *models.ForbiddenAccessError {
	return o.Payload
}

func (o *PostAuthLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenAccessError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthLinkNotFound creates a PostAuthLinkNotFound with default headers values
func NewPostAuthLinkNotFound() *PostAuthLinkNotFound {
	return &PostAuthLinkNotFound{}
}

/*
PostAuthLinkNotFound describes a response with status code 404, with default header values.

Returns error indicating that server can't find requested resource.
*/
type PostAuthLinkNotFound struct {
	Payload *models.NotFoundError
}

// IsSuccess returns true when this post auth link not found response has a 2xx status code
func (o *PostAuthLinkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post auth link not found response has a 3xx status code
func (o *PostAuthLinkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth link not found response has a 4xx status code
func (o *PostAuthLinkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post auth link not found response has a 5xx status code
func (o *PostAuthLinkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post auth link not found response a status code equal to that given
func (o *PostAuthLinkNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostAuthLinkNotFound) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthLinkNotFound) String() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkNotFound  %+v", 404, o.Payload)
}

func (o *PostAuthLinkNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *PostAuthLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthLinkInternalServerError creates a PostAuthLinkInternalServerError with default headers values
func NewPostAuthLinkInternalServerError() *PostAuthLinkInternalServerError {
	return &PostAuthLinkInternalServerError{}
}

/*
PostAuthLinkInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type PostAuthLinkInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this post auth link internal server error response has a 2xx status code
func (o *PostAuthLinkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post auth link internal server error response has a 3xx status code
func (o *PostAuthLinkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post auth link internal server error response has a 4xx status code
func (o *PostAuthLinkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post auth link internal server error response has a 5xx status code
func (o *PostAuthLinkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post auth link internal server error response a status code equal to that given
func (o *PostAuthLinkInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostAuthLinkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthLinkInternalServerError) String() string {
	return fmt.Sprintf("[POST /users/{userId}/auth_link][%d] postAuthLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthLinkInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *PostAuthLinkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostAuthLinkBody post auth link body
swagger:model PostAuthLinkBody
*/
type PostAuthLinkBody struct {

	// mobile
	Mobile string `json:"mobile,omitempty"`
}

// Validate validates this post auth link body
func (o *PostAuthLinkBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post auth link body based on context it is used
func (o *PostAuthLinkBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostAuthLinkBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAuthLinkBody) UnmarshalBinary(b []byte) error {
	var res PostAuthLinkBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
