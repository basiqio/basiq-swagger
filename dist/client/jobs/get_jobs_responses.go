// Code generated by go-swagger; DO NOT EDIT.

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// GetJobsReader is a Reader for the GetJobs structure.
type GetJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetJobsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetJobsOK creates a GetJobsOK with default headers values
func NewGetJobsOK() *GetJobsOK {
	return &GetJobsOK{}
}

/*
GetJobsOK describes a response with status code 200, with default header values.

Returns a job details if a valid job ID was provided.
*/
type GetJobsOK struct {
	Payload *models.JobData
}

// IsSuccess returns true when this get jobs o k response has a 2xx status code
func (o *GetJobsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get jobs o k response has a 3xx status code
func (o *GetJobsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jobs o k response has a 4xx status code
func (o *GetJobsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get jobs o k response has a 5xx status code
func (o *GetJobsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get jobs o k response a status code equal to that given
func (o *GetJobsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetJobsOK) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsOK  %+v", 200, o.Payload)
}

func (o *GetJobsOK) String() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsOK  %+v", 200, o.Payload)
}

func (o *GetJobsOK) GetPayload() *models.JobData {
	return o.Payload
}

func (o *GetJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJobsBadRequest creates a GetJobsBadRequest with default headers values
func NewGetJobsBadRequest() *GetJobsBadRequest {
	return &GetJobsBadRequest{}
}

/*
GetJobsBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error
*/
type GetJobsBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this get jobs bad request response has a 2xx status code
func (o *GetJobsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jobs bad request response has a 3xx status code
func (o *GetJobsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jobs bad request response has a 4xx status code
func (o *GetJobsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jobs bad request response has a 5xx status code
func (o *GetJobsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get jobs bad request response a status code equal to that given
func (o *GetJobsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetJobsBadRequest) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsBadRequest  %+v", 400, o.Payload)
}

func (o *GetJobsBadRequest) String() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsBadRequest  %+v", 400, o.Payload)
}

func (o *GetJobsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJobsForbidden creates a GetJobsForbidden with default headers values
func NewGetJobsForbidden() *GetJobsForbidden {
	return &GetJobsForbidden{}
}

/*
GetJobsForbidden describes a response with status code 403, with default header values.

Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource.
*/
type GetJobsForbidden struct {
	Payload *models.ForbiddenAccessError
}

// IsSuccess returns true when this get jobs forbidden response has a 2xx status code
func (o *GetJobsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jobs forbidden response has a 3xx status code
func (o *GetJobsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jobs forbidden response has a 4xx status code
func (o *GetJobsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jobs forbidden response has a 5xx status code
func (o *GetJobsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get jobs forbidden response a status code equal to that given
func (o *GetJobsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetJobsForbidden) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsForbidden  %+v", 403, o.Payload)
}

func (o *GetJobsForbidden) String() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsForbidden  %+v", 403, o.Payload)
}

func (o *GetJobsForbidden) GetPayload() *models.ForbiddenAccessError {
	return o.Payload
}

func (o *GetJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenAccessError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJobsNotFound creates a GetJobsNotFound with default headers values
func NewGetJobsNotFound() *GetJobsNotFound {
	return &GetJobsNotFound{}
}

/*
GetJobsNotFound describes a response with status code 404, with default header values.

Returns error indicating that server can't find requested resource.
*/
type GetJobsNotFound struct {
	Payload *models.NotFoundError
}

// IsSuccess returns true when this get jobs not found response has a 2xx status code
func (o *GetJobsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jobs not found response has a 3xx status code
func (o *GetJobsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jobs not found response has a 4xx status code
func (o *GetJobsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get jobs not found response has a 5xx status code
func (o *GetJobsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get jobs not found response a status code equal to that given
func (o *GetJobsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetJobsNotFound) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsNotFound  %+v", 404, o.Payload)
}

func (o *GetJobsNotFound) String() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsNotFound  %+v", 404, o.Payload)
}

func (o *GetJobsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetJobsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetJobsInternalServerError creates a GetJobsInternalServerError with default headers values
func NewGetJobsInternalServerError() *GetJobsInternalServerError {
	return &GetJobsInternalServerError{}
}

/*
GetJobsInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type GetJobsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get jobs internal server error response has a 2xx status code
func (o *GetJobsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get jobs internal server error response has a 3xx status code
func (o *GetJobsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get jobs internal server error response has a 4xx status code
func (o *GetJobsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get jobs internal server error response has a 5xx status code
func (o *GetJobsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get jobs internal server error response a status code equal to that given
func (o *GetJobsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetJobsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJobsInternalServerError) String() string {
	return fmt.Sprintf("[GET /jobs/{jobId}][%d] getJobsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetJobsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
