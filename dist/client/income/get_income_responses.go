// Code generated by go-swagger; DO NOT EDIT.

package income

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// GetIncomeReader is a Reader for the GetIncome structure.
type GetIncomeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIncomeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIncomeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIncomeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIncomeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIncomeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIncomeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetIncomeOK creates a GetIncomeOK with default headers values
func NewGetIncomeOK() *GetIncomeOK {
	return &GetIncomeOK{}
}

/*
GetIncomeOK describes a response with status code 200, with default header values.

Returns a saved income resource, if the operation succeeded.
*/
type GetIncomeOK struct {
	Payload *models.IncomeResponse
}

// IsSuccess returns true when this get income o k response has a 2xx status code
func (o *GetIncomeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get income o k response has a 3xx status code
func (o *GetIncomeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get income o k response has a 4xx status code
func (o *GetIncomeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get income o k response has a 5xx status code
func (o *GetIncomeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get income o k response a status code equal to that given
func (o *GetIncomeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetIncomeOK) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeOK  %+v", 200, o.Payload)
}

func (o *GetIncomeOK) String() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeOK  %+v", 200, o.Payload)
}

func (o *GetIncomeOK) GetPayload() *models.IncomeResponse {
	return o.Payload
}

func (o *GetIncomeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IncomeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncomeBadRequest creates a GetIncomeBadRequest with default headers values
func NewGetIncomeBadRequest() *GetIncomeBadRequest {
	return &GetIncomeBadRequest{}
}

/*
GetIncomeBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error.
*/
type GetIncomeBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this get income bad request response has a 2xx status code
func (o *GetIncomeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get income bad request response has a 3xx status code
func (o *GetIncomeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get income bad request response has a 4xx status code
func (o *GetIncomeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get income bad request response has a 5xx status code
func (o *GetIncomeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get income bad request response a status code equal to that given
func (o *GetIncomeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetIncomeBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeBadRequest  %+v", 400, o.Payload)
}

func (o *GetIncomeBadRequest) String() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeBadRequest  %+v", 400, o.Payload)
}

func (o *GetIncomeBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetIncomeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncomeForbidden creates a GetIncomeForbidden with default headers values
func NewGetIncomeForbidden() *GetIncomeForbidden {
	return &GetIncomeForbidden{}
}

/*
GetIncomeForbidden describes a response with status code 403, with default header values.

Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource.
*/
type GetIncomeForbidden struct {
	Payload *models.ForbiddenAccessError
}

// IsSuccess returns true when this get income forbidden response has a 2xx status code
func (o *GetIncomeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get income forbidden response has a 3xx status code
func (o *GetIncomeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get income forbidden response has a 4xx status code
func (o *GetIncomeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get income forbidden response has a 5xx status code
func (o *GetIncomeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get income forbidden response a status code equal to that given
func (o *GetIncomeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetIncomeForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeForbidden  %+v", 403, o.Payload)
}

func (o *GetIncomeForbidden) String() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeForbidden  %+v", 403, o.Payload)
}

func (o *GetIncomeForbidden) GetPayload() *models.ForbiddenAccessError {
	return o.Payload
}

func (o *GetIncomeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenAccessError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncomeNotFound creates a GetIncomeNotFound with default headers values
func NewGetIncomeNotFound() *GetIncomeNotFound {
	return &GetIncomeNotFound{}
}

/*
GetIncomeNotFound describes a response with status code 404, with default header values.

Returns error indicating that server can't find requested resource.
*/
type GetIncomeNotFound struct {
	Payload *models.NotFoundError
}

// IsSuccess returns true when this get income not found response has a 2xx status code
func (o *GetIncomeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get income not found response has a 3xx status code
func (o *GetIncomeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get income not found response has a 4xx status code
func (o *GetIncomeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get income not found response has a 5xx status code
func (o *GetIncomeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get income not found response a status code equal to that given
func (o *GetIncomeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetIncomeNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeNotFound  %+v", 404, o.Payload)
}

func (o *GetIncomeNotFound) String() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeNotFound  %+v", 404, o.Payload)
}

func (o *GetIncomeNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetIncomeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIncomeInternalServerError creates a GetIncomeInternalServerError with default headers values
func NewGetIncomeInternalServerError() *GetIncomeInternalServerError {
	return &GetIncomeInternalServerError{}
}

/*
GetIncomeInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type GetIncomeInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get income internal server error response has a 2xx status code
func (o *GetIncomeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get income internal server error response has a 3xx status code
func (o *GetIncomeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get income internal server error response has a 4xx status code
func (o *GetIncomeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get income internal server error response has a 5xx status code
func (o *GetIncomeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get income internal server error response a status code equal to that given
func (o *GetIncomeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetIncomeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIncomeInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{userId}/income/{snapshotId}][%d] getIncomeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIncomeInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetIncomeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
