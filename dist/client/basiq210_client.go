// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/client/accounts"
	"github.com/basiqio/basiq-swagger/dist/client/affordability"
	"github.com/basiqio/basiq-swagger/dist/client/auth_links"
	"github.com/basiqio/basiq-swagger/dist/client/connections"
	"github.com/basiqio/basiq-swagger/dist/client/enrich"
	"github.com/basiqio/basiq-swagger/dist/client/expenses"
	"github.com/basiqio/basiq-swagger/dist/client/income"
	"github.com/basiqio/basiq-swagger/dist/client/institutions"
	"github.com/basiqio/basiq-swagger/dist/client/jobs"
	"github.com/basiqio/basiq-swagger/dist/client/statements"
	"github.com/basiqio/basiq-swagger/dist/client/token"
	"github.com/basiqio/basiq-swagger/dist/client/transactions"
	"github.com/basiqio/basiq-swagger/dist/client/users"
)

// Default basiq210 HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "au-api.basiq.io"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new basiq210 HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Basiq210 {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new basiq210 HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Basiq210 {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new basiq210 client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Basiq210 {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Basiq210)
	cli.Transport = transport
	cli.Accounts = accounts.New(transport, formats)
	cli.Affordability = affordability.New(transport, formats)
	cli.AuthLinks = auth_links.New(transport, formats)
	cli.Connections = connections.New(transport, formats)
	cli.Enrich = enrich.New(transport, formats)
	cli.Expenses = expenses.New(transport, formats)
	cli.Income = income.New(transport, formats)
	cli.Institutions = institutions.New(transport, formats)
	cli.Jobs = jobs.New(transport, formats)
	cli.Statements = statements.New(transport, formats)
	cli.Token = token.New(transport, formats)
	cli.Transactions = transactions.New(transport, formats)
	cli.Users = users.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Basiq210 is a client for basiq210
type Basiq210 struct {
	Accounts accounts.ClientService

	Affordability affordability.ClientService

	AuthLinks auth_links.ClientService

	Connections connections.ClientService

	Enrich enrich.ClientService

	Expenses expenses.ClientService

	Income income.ClientService

	Institutions institutions.ClientService

	Jobs jobs.ClientService

	Statements statements.ClientService

	Token token.ClientService

	Transactions transactions.ClientService

	Users users.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Basiq210) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Accounts.SetTransport(transport)
	c.Affordability.SetTransport(transport)
	c.AuthLinks.SetTransport(transport)
	c.Connections.SetTransport(transport)
	c.Enrich.SetTransport(transport)
	c.Expenses.SetTransport(transport)
	c.Income.SetTransport(transport)
	c.Institutions.SetTransport(transport)
	c.Jobs.SetTransport(transport)
	c.Statements.SetTransport(transport)
	c.Token.SetTransport(transport)
	c.Transactions.SetTransport(transport)
	c.Users.SetTransport(transport)
}
