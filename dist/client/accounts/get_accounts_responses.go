// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// GetAccountsReader is a Reader for the GetAccounts structure.
type GetAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccountsOK creates a GetAccountsOK with default headers values
func NewGetAccountsOK() *GetAccountsOK {
	return &GetAccountsOK{}
}

/*
GetAccountsOK describes a response with status code 200, with default header values.

Returns a account with details.
*/
type GetAccountsOK struct {
	Payload *models.AccountsResponseResource
}

// IsSuccess returns true when this get accounts o k response has a 2xx status code
func (o *GetAccountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get accounts o k response has a 3xx status code
func (o *GetAccountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts o k response has a 4xx status code
func (o *GetAccountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get accounts o k response has a 5xx status code
func (o *GetAccountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts o k response a status code equal to that given
func (o *GetAccountsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAccountsOK) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsOK  %+v", 200, o.Payload)
}

func (o *GetAccountsOK) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsOK  %+v", 200, o.Payload)
}

func (o *GetAccountsOK) GetPayload() *models.AccountsResponseResource {
	return o.Payload
}

func (o *GetAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountsResponseResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsBadRequest creates a GetAccountsBadRequest with default headers values
func NewGetAccountsBadRequest() *GetAccountsBadRequest {
	return &GetAccountsBadRequest{}
}

/*
GetAccountsBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error
*/
type GetAccountsBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this get accounts bad request response has a 2xx status code
func (o *GetAccountsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts bad request response has a 3xx status code
func (o *GetAccountsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts bad request response has a 4xx status code
func (o *GetAccountsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts bad request response has a 5xx status code
func (o *GetAccountsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts bad request response a status code equal to that given
func (o *GetAccountsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAccountsBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountsBadRequest) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsForbidden creates a GetAccountsForbidden with default headers values
func NewGetAccountsForbidden() *GetAccountsForbidden {
	return &GetAccountsForbidden{}
}

/*
GetAccountsForbidden describes a response with status code 403, with default header values.

Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource.
*/
type GetAccountsForbidden struct {
	Payload *models.ForbiddenAccessError
}

// IsSuccess returns true when this get accounts forbidden response has a 2xx status code
func (o *GetAccountsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts forbidden response has a 3xx status code
func (o *GetAccountsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts forbidden response has a 4xx status code
func (o *GetAccountsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts forbidden response has a 5xx status code
func (o *GetAccountsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts forbidden response a status code equal to that given
func (o *GetAccountsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAccountsForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountsForbidden) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountsForbidden) GetPayload() *models.ForbiddenAccessError {
	return o.Payload
}

func (o *GetAccountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenAccessError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsNotFound creates a GetAccountsNotFound with default headers values
func NewGetAccountsNotFound() *GetAccountsNotFound {
	return &GetAccountsNotFound{}
}

/*
GetAccountsNotFound describes a response with status code 404, with default header values.

Returns error indicating that server can't find requested resource.
*/
type GetAccountsNotFound struct {
	Payload *models.NotFoundError
}

// IsSuccess returns true when this get accounts not found response has a 2xx status code
func (o *GetAccountsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts not found response has a 3xx status code
func (o *GetAccountsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts not found response has a 4xx status code
func (o *GetAccountsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts not found response has a 5xx status code
func (o *GetAccountsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts not found response a status code equal to that given
func (o *GetAccountsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAccountsNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountsNotFound) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsInternalServerError creates a GetAccountsInternalServerError with default headers values
func NewGetAccountsInternalServerError() *GetAccountsInternalServerError {
	return &GetAccountsInternalServerError{}
}

/*
GetAccountsInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type GetAccountsInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get accounts internal server error response has a 2xx status code
func (o *GetAccountsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts internal server error response has a 3xx status code
func (o *GetAccountsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts internal server error response has a 4xx status code
func (o *GetAccountsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get accounts internal server error response has a 5xx status code
func (o *GetAccountsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get accounts internal server error response a status code equal to that given
func (o *GetAccountsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAccountsInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts][%d] getAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAccountsInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
