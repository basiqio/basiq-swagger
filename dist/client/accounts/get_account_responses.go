// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/basiqio/basiq-swagger/dist/models"
)

// GetAccountReader is a Reader for the GetAccount structure.
type GetAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccountOK creates a GetAccountOK with default headers values
func NewGetAccountOK() *GetAccountOK {
	return &GetAccountOK{}
}

/*
GetAccountOK describes a response with status code 200, with default header values.

Returns a account with details.
*/
type GetAccountOK struct {
	Payload *models.AccountResponseResource
}

// IsSuccess returns true when this get account o k response has a 2xx status code
func (o *GetAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get account o k response has a 3xx status code
func (o *GetAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account o k response has a 4xx status code
func (o *GetAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account o k response has a 5xx status code
func (o *GetAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get account o k response a status code equal to that given
func (o *GetAccountOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAccountOK) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountOK  %+v", 200, o.Payload)
}

func (o *GetAccountOK) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountOK  %+v", 200, o.Payload)
}

func (o *GetAccountOK) GetPayload() *models.AccountResponseResource {
	return o.Payload
}

func (o *GetAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountResponseResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountBadRequest creates a GetAccountBadRequest with default headers values
func NewGetAccountBadRequest() *GetAccountBadRequest {
	return &GetAccountBadRequest{}
}

/*
GetAccountBadRequest describes a response with status code 400, with default header values.

Returns error that server cannot or will not process the request due to something that is perceived to be a client error
*/
type GetAccountBadRequest struct {
	Payload *models.BadRequestError
}

// IsSuccess returns true when this get account bad request response has a 2xx status code
func (o *GetAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account bad request response has a 3xx status code
func (o *GetAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account bad request response has a 4xx status code
func (o *GetAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account bad request response has a 5xx status code
func (o *GetAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get account bad request response a status code equal to that given
func (o *GetAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAccountBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountBadRequest) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountForbidden creates a GetAccountForbidden with default headers values
func NewGetAccountForbidden() *GetAccountForbidden {
	return &GetAccountForbidden{}
}

/*
GetAccountForbidden describes a response with status code 403, with default header values.

Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource.
*/
type GetAccountForbidden struct {
	Payload *models.ForbiddenAccessError
}

// IsSuccess returns true when this get account forbidden response has a 2xx status code
func (o *GetAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account forbidden response has a 3xx status code
func (o *GetAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account forbidden response has a 4xx status code
func (o *GetAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account forbidden response has a 5xx status code
func (o *GetAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get account forbidden response a status code equal to that given
func (o *GetAccountForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetAccountForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountForbidden) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountForbidden) GetPayload() *models.ForbiddenAccessError {
	return o.Payload
}

func (o *GetAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenAccessError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountNotFound creates a GetAccountNotFound with default headers values
func NewGetAccountNotFound() *GetAccountNotFound {
	return &GetAccountNotFound{}
}

/*
GetAccountNotFound describes a response with status code 404, with default header values.

Returns error indicating that server can't find requested resource.
*/
type GetAccountNotFound struct {
	Payload *models.NotFoundError
}

// IsSuccess returns true when this get account not found response has a 2xx status code
func (o *GetAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account not found response has a 3xx status code
func (o *GetAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account not found response has a 4xx status code
func (o *GetAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account not found response has a 5xx status code
func (o *GetAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get account not found response a status code equal to that given
func (o *GetAccountNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAccountNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountNotFound) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountInternalServerError creates a GetAccountInternalServerError with default headers values
func NewGetAccountInternalServerError() *GetAccountInternalServerError {
	return &GetAccountInternalServerError{}
}

/*
GetAccountInternalServerError describes a response with status code 500, with default header values.

Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
*/
type GetAccountInternalServerError struct {
	Payload *models.InternalServerError
}

// IsSuccess returns true when this get account internal server error response has a 2xx status code
func (o *GetAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account internal server error response has a 3xx status code
func (o *GetAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account internal server error response has a 4xx status code
func (o *GetAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account internal server error response has a 5xx status code
func (o *GetAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get account internal server error response a status code equal to that given
func (o *GetAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAccountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAccountInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{userId}/accounts/{accountId}][%d] getAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAccountInternalServerError) GetPayload() *models.InternalServerError {
	return o.Payload
}

func (o *GetAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
